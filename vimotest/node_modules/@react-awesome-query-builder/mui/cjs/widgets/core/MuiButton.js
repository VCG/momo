"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _Button = _interopRequireDefault(require("@mui/material/Button"));
var _IconButton = _interopRequireDefault(require("@mui/material/IconButton"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var hideLabelsFor = {
  "addRuleGroup": true,
  "addRuleGroupExt": true,
  "delGroup": true,
  "delRuleGroup": true,
  "delRule": true
};
var typeToColor = {
  "addRule": "primary",
  "addGroup": "primary",
  "delGroup": "secondary",
  "delRuleGroup": "secondary",
  "delRule": "secondary"
};
var _default = exports["default"] = /*#__PURE__*/(0, _react.memo)(function (props) {
  var type = props.type,
    label = props.label,
    onClick = props.onClick,
    readonly = props.readonly,
    renderIcon = props.renderIcon;
  var iconProps = {
    type: type,
    readonly: readonly
  };
  var icon = renderIcon === null || renderIcon === void 0 ? void 0 : renderIcon(iconProps);
  if (!label || hideLabelsFor[type]) {
    // For icons, use the label as aria-label for accessibility
    return /*#__PURE__*/_react["default"].createElement(_IconButton["default"], {
      size: "small",
      disabled: readonly,
      onClick: onClick,
      color: typeToColor[type],
      "aria-label": label
    }, icon);
  } else {
    return /*#__PURE__*/_react["default"].createElement(_Button["default"], {
      size: "small",
      disabled: readonly,
      onClick: onClick,
      color: typeToColor[type],
      startIcon: icon
    }, label);
  }
});