"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _FormControl = _interopRequireDefault(require("@mui/material/FormControl"));
var _TextField = _interopRequireDefault(require("@mui/material/TextField"));
var _ui = require("@react-awesome-query-builder/ui");
var _TimePicker = require("@mui/x-date-pickers/TimePicker");
var _package = _interopRequireDefault(require("@mui/x-date-pickers/package.json"));
var _xdpPackage$version$s, _xdpPackage$version;
// to determine version
var moment = _ui.Utils.moment;
var xdpVersion = parseInt((_xdpPackage$version$s = _package["default"] === null || _package["default"] === void 0 || (_xdpPackage$version = _package["default"].version) === null || _xdpPackage$version === void 0 || (_xdpPackage$version = _xdpPackage$version.split(".")) === null || _xdpPackage$version === void 0 ? void 0 : _xdpPackage$version[0]) !== null && _xdpPackage$version$s !== void 0 ? _xdpPackage$version$s : "0");
var _default = exports["default"] = function _default(props) {
  var value = props.value,
    setValue = props.setValue,
    use12Hours = props.use12Hours,
    readonly = props.readonly,
    placeholder = props.placeholder,
    timeFormat = props.timeFormat,
    valueFormat = props.valueFormat,
    customProps = props.customProps;
  var formatSingleValue = function formatSingleValue(value) {
    return value && value.isValid() ? value.format(valueFormat) : undefined;
  };
  var handleChange = function handleChange(value) {
    setValue(formatSingleValue(value));
  };
  var hasSeconds = timeFormat.indexOf(":ss") != -1;
  var timeValue = value ? moment(value, timeFormat) : null;
  var renderInput = function renderInput(params) {
    return /*#__PURE__*/_react["default"].createElement(_TextField["default"], (0, _extends2["default"])({
      size: "small",
      variant: "standard"
    }, params));
  };
  var desktopModeMediaQuery = "@media (pointer: fine), (pointer: none)";
  var pickerProps = xdpVersion >= 6 ? {
    format: timeFormat,
    slotProps: {
      textField: {
        size: "small",
        variant: "standard"
      },
      toolbar: {
        toolbarPlaceholder: !readonly ? placeholder : ""
      }
    }
  } : {
    inputFormat: timeFormat,
    renderInput: renderInput,
    toolbarPlaceholder: !readonly ? placeholder : ""
  };
  return /*#__PURE__*/_react["default"].createElement(_FormControl["default"], null, /*#__PURE__*/_react["default"].createElement(_TimePicker.TimePicker, (0, _extends2["default"])({
    desktopModeMediaQuery: desktopModeMediaQuery,
    readOnly: readonly,
    disabled: readonly,
    ampm: !!use12Hours,
    value: timeValue,
    onChange: handleChange,
    views: hasSeconds ? ["hours", "minutes", "seconds"] : ["hours", "minutes"]
  }, pickerProps, customProps)));
};