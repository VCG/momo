import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from "react";
import MuiWidgets from "../widgets";
import { BasicConfig, Utils } from "@react-awesome-query-builder/ui";
var settings = _objectSpread(_objectSpread({}, BasicConfig.settings), {}, {
  renderField: function renderField(props, _ref) {
    var _props$customProps;
    var RCE = _ref.RCE,
      _ref$W = _ref.W,
      MuiFieldAutocomplete = _ref$W.MuiFieldAutocomplete,
      MuiFieldSelect = _ref$W.MuiFieldSelect;
    return props !== null && props !== void 0 && (_props$customProps = props.customProps) !== null && _props$customProps !== void 0 && _props$customProps.showSearch ? RCE(MuiFieldAutocomplete, props) : RCE(MuiFieldSelect, props);
  },
  renderOperator: function renderOperator(props, _ref2) {
    var _props$customProps2;
    var RCE = _ref2.RCE,
      _ref2$W = _ref2.W,
      MuiFieldAutocomplete = _ref2$W.MuiFieldAutocomplete,
      MuiFieldSelect = _ref2$W.MuiFieldSelect;
    return props !== null && props !== void 0 && (_props$customProps2 = props.customProps) !== null && _props$customProps2 !== void 0 && _props$customProps2.showSearch ? RCE(MuiFieldAutocomplete, props) : RCE(MuiFieldSelect, props);
  },
  renderFunc: function renderFunc(props, _ref3) {
    var RCE = _ref3.RCE,
      MuiFieldSelect = _ref3.W.MuiFieldSelect;
    return RCE(MuiFieldSelect, props);
  },
  renderConjs: function renderConjs(props, _ref4) {
    var RCE = _ref4.RCE,
      MuiConjs = _ref4.W.MuiConjs;
    return RCE(MuiConjs, props);
  },
  renderSwitch: function renderSwitch(props, _ref5) {
    var RCE = _ref5.RCE,
      MuiSwitch = _ref5.W.MuiSwitch;
    return RCE(MuiSwitch, props);
  },
  renderButton: function renderButton(props, _ref6) {
    var RCE = _ref6.RCE,
      MuiButton = _ref6.W.MuiButton;
    return RCE(MuiButton, props);
  },
  renderIcon: function renderIcon(props, _ref7) {
    var RCE = _ref7.RCE,
      MuiIcon = _ref7.W.MuiIcon;
    return RCE(MuiIcon, props);
  },
  renderButtonGroup: function renderButtonGroup(props, _ref8) {
    var RCE = _ref8.RCE,
      MuiButtonGroup = _ref8.W.MuiButtonGroup;
    return RCE(MuiButtonGroup, props);
  },
  renderValueSources: function renderValueSources(props, _ref9) {
    var RCE = _ref9.RCE,
      MuiValueSources = _ref9.W.MuiValueSources;
    return RCE(MuiValueSources, props);
  },
  renderFieldSources: function renderFieldSources(props, _ref10) {
    var RCE = _ref10.RCE,
      MuiValueSources = _ref10.W.MuiValueSources;
    return RCE(MuiValueSources, props);
  },
  renderProvider: function renderProvider(props, _ref11) {
    var RCE = _ref11.RCE,
      MuiProvider = _ref11.W.MuiProvider;
    return RCE(MuiProvider, props);
  },
  renderConfirm: function renderConfirm(props, _ref12) {
    var MuiConfirm = _ref12.W.MuiConfirm;
    return MuiConfirm(props);
  },
  useConfirm: function useConfirm(_ref13) {
    var MuiUseConfirm = _ref13.W.MuiUseConfirm;
    return MuiUseConfirm();
  }
});
var widgets = _objectSpread(_objectSpread({}, BasicConfig.widgets), {}, {
  text: _objectSpread(_objectSpread({}, BasicConfig.widgets.text), {}, {
    factory: function factory(props, _ref14) {
      var RCE = _ref14.RCE,
        MuiTextWidget = _ref14.W.MuiTextWidget;
      return RCE(MuiTextWidget, props);
    }
  }),
  textarea: _objectSpread(_objectSpread({}, BasicConfig.widgets.textarea), {}, {
    factory: function factory(props, _ref15) {
      var RCE = _ref15.RCE,
        MuiTextAreaWidget = _ref15.W.MuiTextAreaWidget;
      return RCE(MuiTextAreaWidget, props);
    }
  }),
  number: _objectSpread(_objectSpread({}, BasicConfig.widgets.number), {}, {
    factory: function factory(props, _ref16) {
      var RCE = _ref16.RCE,
        MuiNumberWidget = _ref16.W.MuiNumberWidget;
      return RCE(MuiNumberWidget, props);
    }
  }),
  multiselect: _objectSpread(_objectSpread({}, BasicConfig.widgets.multiselect), {}, {
    factory: function factory(props, _ref17) {
      var RCE = _ref17.RCE,
        _ref17$W = _ref17.W,
        MuiAutocompleteWidget = _ref17$W.MuiAutocompleteWidget,
        MuiMultiSelectWidget = _ref17$W.MuiMultiSelectWidget;
      return props.asyncFetch || props.showSearch ? RCE(MuiAutocompleteWidget, _objectSpread(_objectSpread({}, props), {}, {
        multiple: true
      })) : RCE(MuiMultiSelectWidget, props);
    }
  }),
  select: _objectSpread(_objectSpread({}, BasicConfig.widgets.select), {}, {
    factory: function factory(props, _ref18) {
      var RCE = _ref18.RCE,
        _ref18$W = _ref18.W,
        MuiAutocompleteWidget = _ref18$W.MuiAutocompleteWidget,
        MuiSelectWidget = _ref18$W.MuiSelectWidget;
      return props.asyncFetch || props.showSearch ? RCE(MuiAutocompleteWidget, props) : RCE(MuiSelectWidget, props);
    }
  }),
  slider: _objectSpread(_objectSpread({}, BasicConfig.widgets.slider), {}, {
    factory: function factory(props, _ref19) {
      var RCE = _ref19.RCE,
        MuiSliderWidget = _ref19.W.MuiSliderWidget;
      return RCE(MuiSliderWidget, props);
    }
  }),
  "boolean": _objectSpread(_objectSpread({}, BasicConfig.widgets["boolean"]), {}, {
    factory: function factory(props, _ref20) {
      var RCE = _ref20.RCE,
        MuiBooleanWidget = _ref20.W.MuiBooleanWidget;
      return RCE(MuiBooleanWidget, props);
    }
  }),
  date: _objectSpread(_objectSpread({}, BasicConfig.widgets.date), {}, {
    factory: function factory(props, _ref21) {
      var RCE = _ref21.RCE,
        MuiDateWidget = _ref21.W.MuiDateWidget;
      return RCE(MuiDateWidget, props);
    }
  }),
  time: _objectSpread(_objectSpread({}, BasicConfig.widgets.time), {}, {
    factory: function factory(props, _ref22) {
      var RCE = _ref22.RCE,
        MuiTimeWidget = _ref22.W.MuiTimeWidget;
      return RCE(MuiTimeWidget, props);
    }
  }),
  datetime: _objectSpread(_objectSpread({}, BasicConfig.widgets.datetime), {}, {
    factory: function factory(props, _ref23) {
      var RCE = _ref23.RCE,
        MuiDateTimeWidget = _ref23.W.MuiDateTimeWidget;
      return RCE(MuiDateTimeWidget, props);
    }
  }),
  rangeslider: _objectSpread(_objectSpread({}, BasicConfig.widgets.rangeslider), {}, {
    factory: function factory(props, _ref24) {
      var RCE = _ref24.RCE,
        MuiRangeWidget = _ref24.W.MuiRangeWidget;
      return RCE(MuiRangeWidget, props);
    }
  })
});
var types = _objectSpread({}, BasicConfig.types);
var ctx = _objectSpread(_objectSpread({}, BasicConfig.ctx), {}, {
  W: _objectSpread(_objectSpread({}, BasicConfig.ctx.W), MuiWidgets)
});
var config = _objectSpread(_objectSpread({}, BasicConfig), {}, {
  ctx: ctx,
  types: types,
  widgets: widgets,
  settings: settings
});
config = Utils.ConfigMixins.addMixins(config, ["rangeslider"]);
export default config;