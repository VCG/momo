"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _axios = _interopRequireDefault(require("axios"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
class NeuprintExecutor {
  constructor(dataServer, dataset, token, vimoServer) {
    this.dataServer = dataServer;
    this.dataset = dataset;
    this.token = token;
    this.vimoServer = vimoServer;
  }
  async fetchData(endpoint) {
    let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    try {
      const res = await _axios.default.post(`${this.vimoServer}/${endpoint}`, {
        server: this.dataServer,
        version: this.dataset,
        token: JSON.stringify(this.token),
        ...attrs
      });
      return res.data;
    } catch (error) {
      if (error.response) {
        throw new Error(`${error.response.status}: ${error.response.data?.detail?.error}`);
      }
      throw error;
    }
  }
  async getNodeFields() {
    return await this.fetchData("fetch_node_fields");
  }
  async getEdgeFields() {
    return await this.fetchData("fetch_edge_fields");
  }
  async json2cypher(motifJson, lim) {
    return await this.fetchData("cypher", {
      motif: motifJson,
      lim: lim
    });
  }
  getMotifCount = async motif => {
    // get request to backend to get motif count
    let url = `${this.vimoServer}/count/motif=${motif}`;
    return (await _axios.default.get(url)).data;
  };
  getRelativeMotifCount = async motif => {
    // get request to backend to get motif count
    let url = `${this.vimoServer}/rel_count/motif=${motif}`;
    return (await _axios.default.get(url)).data;
  };
}
exports.default = NeuprintExecutor;