"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _GlobalContext = require("../contexts/GlobalContext");
var _mui = require("@react-awesome-query-builder/mui");
require("@react-awesome-query-builder/mui/css/styles.css");
require("./QueryBuilder.css");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } // import "react-awesome-query-builder/lib/css/compact_styles.css";
let InitialConfig = _mui.MuiConfig;
delete InitialConfig["conjunctions"]["OR"];
InitialConfig["settings"]["showNot"] = false;
InitialConfig["settings"]["groupOperators"] = false;
InitialConfig["settings"]["canAddGroup"] = false;
InitialConfig["settings"]["canReorder"] = false;
InitialConfig["settings"]["renderSize"] = "small";
InitialConfig["settings"]["setOpOnChangeField"] = ["keep", "first"];
function QueryBuilder(_ref) {
  let {
    NodeFields,
    EdgeFields
  } = _ref;
  let [tree, setTree] = (0, _react.useState)();
  const context = (0, _react.useContext)(_GlobalContext.AppContext);
  (0, _react.useEffect)(() => {
    const queryValue = {
      id: _mui.Utils.uuid(),
      type: "group"
    };
    setTree(_mui.Utils.checkTree(_mui.Utils.loadTree(queryValue), {
      ...InitialConfig,
      fields: NodeFields
    }));
  }, []);
  (0, _react.useEffect)(() => {
    const queryValue = {
      id: _mui.Utils.uuid(),
      type: "group"
    };
    if (context.selectedSketchElement && context.selectedSketchElement.type === "edge") {
      setTree(_mui.Utils.checkTree(_mui.Utils.loadTree(queryValue), {
        ...InitialConfig,
        fields: EdgeFields
      }));
    } else {
      setTree(_mui.Utils.checkTree(_mui.Utils.loadTree(queryValue), {
        ...InitialConfig,
        fields: NodeFields
      }));
    }
  }, [context.selectedSketchElement]);
  const renderBuilder = props => /*#__PURE__*/_react.default.createElement("div", {
    className: "query-builder-container",
    style: {
      padding: 0,
      minWidth: 300
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "query-builder qb-lite",
    style: {
      margin: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_mui.Builder, props)));
  const onChange = (immutableTree, config) => {
    // Tip: for better performance you can apply `throttle` - see `examples/demo`
    // this.setState({, config: config});
    let query = _mui.Utils.mongodbFormat(immutableTree, config);
    setTree(immutableTree);
    let updatedElem = {
      ...context.selectedSketchElement,
      tree: immutableTree,
      properties: query
    };
    context.setSelectedSketchElement(updatedElem);
  };
  return /*#__PURE__*/_react.default.createElement("div", null, tree && context?.selectedSketchElement?.type === "node" && (Object.keys(NodeFields).length > 0 ? /*#__PURE__*/_react.default.createElement(_mui.Query, _extends({}, InitialConfig, {
    fields: NodeFields,
    value: context.selectedSketchElement.tree || tree,
    onChange: onChange,
    renderBuilder: renderBuilder
  })) : /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      height: "45px",
      width: "290px"
    }
  })), tree && context?.selectedSketchElement?.type === "edge" && (Object.keys(EdgeFields).length > 0 ? /*#__PURE__*/_react.default.createElement(_mui.Query, _extends({}, InitialConfig, {
    fields: EdgeFields,
    value: context.selectedSketchElement.tree || tree,
    onChange: onChange,
    renderBuilder: renderBuilder
  })) : /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      height: "45px",
      width: "290px"
    }
  })));
}
var _default = QueryBuilder;
exports.default = _default;